/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.hdsb.gwss.protheroe.ics3u.u6;

/**
 *
 * @author 1protheroery
 */
public class GolfJFrame extends javax.swing.JFrame {

    /**
     * Creates new form GolfJFrame
     */
    public GolfJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lowestScoreText = new javax.swing.JTextField();
        totalScoreText = new javax.swing.JTextField();
        highestScoreText = new javax.swing.JTextField();
        enterScore = new javax.swing.JTextField();
        enterAmountOfHoles = new javax.swing.JTextField();
        holeNumberScoreText = new javax.swing.JLabel();
        amountOfHolesText = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableDisplay = new javax.swing.JTextArea();
        lowestScoreTextHeader = new javax.swing.JLabel();
        highestScoreTextHeader = new javax.swing.JLabel();
        totalScoreTextHeader = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(null);

        lowestScoreText.setEditable(false);
        lowestScoreText.setFont(new java.awt.Font("UPBOLTERS", 0, 24)); // NOI18N
        lowestScoreText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(lowestScoreText);
        lowestScoreText.setBounds(560, 300, 210, 70);

        totalScoreText.setEditable(false);
        totalScoreText.setFont(new java.awt.Font("UPBOLTERS", 0, 24)); // NOI18N
        totalScoreText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(totalScoreText);
        totalScoreText.setBounds(560, 600, 210, 70);

        highestScoreText.setEditable(false);
        highestScoreText.setFont(new java.awt.Font("UPBOLTERS", 0, 24)); // NOI18N
        highestScoreText.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(highestScoreText);
        highestScoreText.setBounds(560, 450, 210, 70);

        enterScore.setFont(new java.awt.Font("UPBOLTERS", 0, 48)); // NOI18N
        enterScore.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        enterScore.setText("0");
        enterScore.setToolTipText("");
        enterScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterScoreActionPerformed(evt);
            }
        });
        getContentPane().add(enterScore);
        enterScore.setBounds(220, 190, 330, 80);

        enterAmountOfHoles.setFont(new java.awt.Font("UPBOLTERS", 0, 36)); // NOI18N
        enterAmountOfHoles.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        enterAmountOfHoles.setText("0");
        enterAmountOfHoles.setToolTipText("");
        enterAmountOfHoles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterAmountOfHolesActionPerformed(evt);
            }
        });
        getContentPane().add(enterAmountOfHoles);
        enterAmountOfHoles.setBounds(90, 220, 70, 40);

        holeNumberScoreText.setFont(new java.awt.Font("UPBOLTERS", 0, 14)); // NOI18N
        holeNumberScoreText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        holeNumberScoreText.setText("Please enter the amount of holes first");
        holeNumberScoreText.setToolTipText("");
        getContentPane().add(holeNumberScoreText);
        holeNumberScoreText.setBounds(250, 150, 260, 30);

        amountOfHolesText.setFont(new java.awt.Font("UPBOLTERS", 0, 14)); // NOI18N
        amountOfHolesText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        amountOfHolesText.setText("Amount of Holes");
        getContentPane().add(amountOfHolesText);
        amountOfHolesText.setBounds(60, 180, 130, 30);

        tableDisplay.setEditable(false);
        tableDisplay.setColumns(20);
        tableDisplay.setFont(new java.awt.Font("UPBOLTERS", 0, 24)); // NOI18N
        tableDisplay.setRows(5);
        jScrollPane2.setViewportView(tableDisplay);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(30, 300, 520, 370);

        lowestScoreTextHeader.setFont(new java.awt.Font("UPBOLTERS", 0, 14)); // NOI18N
        lowestScoreTextHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lowestScoreTextHeader.setText("Lowest Score");
        lowestScoreTextHeader.setToolTipText("");
        getContentPane().add(lowestScoreTextHeader);
        lowestScoreTextHeader.setBounds(560, 280, 210, 20);

        highestScoreTextHeader.setFont(new java.awt.Font("UPBOLTERS", 0, 14)); // NOI18N
        highestScoreTextHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        highestScoreTextHeader.setText("Highest Score");
        highestScoreTextHeader.setToolTipText("");
        getContentPane().add(highestScoreTextHeader);
        highestScoreTextHeader.setBounds(560, 430, 210, 20);

        totalScoreTextHeader.setFont(new java.awt.Font("UPBOLTERS", 0, 14)); // NOI18N
        totalScoreTextHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalScoreTextHeader.setText("Total Score");
        totalScoreTextHeader.setToolTipText("");
        getContentPane().add(totalScoreTextHeader);
        totalScoreTextHeader.setBounds(560, 580, 210, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/hdsb/gwss/protheroe/ics3u/u6/Golf score.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 800, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void enterAmountOfHolesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterAmountOfHolesActionPerformed
        amountOfHoles = Integer.parseInt(enterAmountOfHoles.getText());

        //ASSURES USER ENTERS CORRECT AMOUNT
        if (amountOfHoles > 0) {
            amountOfHolesText.setText("Amount of Holes");
            enterAmountOfHoles.setEnabled(false);
            enterScore.setEnabled(true);
            holeNumberScoreText.setText("Please enter the score of hole #" + (counter + 1));
            enterScore.setText("");

        } else {
            amountOfHolesText.setText("Invalid");
        }
    }//GEN-LAST:event_enterAmountOfHolesActionPerformed

    private void enterScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterScoreActionPerformed
        int[] golfScore = new int[amountOfHoles];
        String[] golfScorePrint = new String[amountOfHoles];

        //ACQUIRES SCORES AND ADDS SCORE
        for (; amountOfHoles >= counter; counter++) {

            //USER INPUT
            holeNumberScoreText.setText("Please enter the score of hole #" + counter);
            golfScore[counter] = Integer.parseInt(enterScore.getText());
            golfScorePrint[counter] = "Hole #" + (counter + 1) + ": " + enterScore.getText();
            print = print + golfScorePrint[counter] + "\n";

            //HIGHEST SCORE
            if ((golfScore[counter]) > max) {
                max = (golfScore[counter]);
            }
            //LOWEST SCORE
            if ((golfScore[counter]) < low) {
                low = (golfScore[counter]);
            }
            //CALCULATED TOTAL SCORE
            total = total + golfScore[counter];

            //WIPES ENTERED SCORE
            enterScore.setText("");

            //PRINTS TABLE
            tableDisplay.setText(print);

            if ((counter + 1) == amountOfHoles) {

                //USER CAN NOT CHANGE ANYTHING ELSE ONCE TABLED DISPLAYED
                lowestScoreText.setText("" + low);
                highestScoreText.setText("" + max);
                totalScoreText.setText("" + total);
                enterScore.setEnabled(false);
                lowestScoreText.setEnabled(false);
                highestScoreText.setEnabled(false);
                totalScoreText.setEnabled(false);
                tableDisplay.setEnabled(false);

            }
        }
    }//GEN-LAST:event_enterScoreActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        //CANT ENTER SCORE UNTIL AMOUNT OF HOLES
        enterScore.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GolfJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GolfJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GolfJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GolfJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GolfJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountOfHolesText;
    private javax.swing.JTextField enterAmountOfHoles;
    private javax.swing.JTextField enterScore;
    private javax.swing.JTextField highestScoreText;
    private javax.swing.JLabel highestScoreTextHeader;
    private javax.swing.JLabel holeNumberScoreText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField lowestScoreText;
    private javax.swing.JLabel lowestScoreTextHeader;
    private javax.swing.JTextArea tableDisplay;
    private javax.swing.JTextField totalScoreText;
    private javax.swing.JLabel totalScoreTextHeader;
    // End of variables declaration//GEN-END:variables
int amountOfHoles = 0;
    int total = 0;
    int counter = 0;
    int max = -1;
    int low = 99999;
    String print = "";
}
